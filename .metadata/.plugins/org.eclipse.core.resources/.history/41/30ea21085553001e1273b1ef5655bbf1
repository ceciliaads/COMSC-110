/*
  ............................................................................
  ............................................................................

  Assignment  : A2
  Course      : COMSC 110 - Section 8244
  Name        : Cecilia Da Silva
  Due date    : 09/18/2023
  Description : Arithmetic, formatted output, decisions

  ............................................................................
  ............................................................................
 */

#include <iostream>
#include <cmath>
#include <iomanip>
using namespace std;

int main() {
/*
 	 	 Part 1. Interest calculations.
	In finance, interest is the amount charged by a lender for the use of an amount of money, called the principal.
	Every loan has a specified interest rate. Interest on the loan may be calculated once a year, or once a month,
	or even once a day. The repetitive calculation is called compounding. The more often a lender calculates, the
	higher the effective interest rate will be, and the more the lender will pay for the use of the money.

	Ask the user to enter a principal amount, in dollars and cents. Then ask the user for the annual interest rate.
	A rate of 5.25% per year would be entered as 5.25.
		(a) Calculate the interest for one year, compounded annually. Display the two inputs, the interest earned,
			and the total balance at the end of the year. The total balance is the original principal plus the interest.
		(b) Calculate the interest by compounding daily. Your output should be similar to that in part (a) but
			labeled appropriately to indicate the frequency of compounding.
*/

//	float principalAmount;
//	cout << "Enter a principal amount, in dollars and cents" << endl;
//	cin >> principalAmount;
//	float annualInterest;
//	cout << "What is the annual interest rate?" << endl;
//	cin >> annualInterest;
//
//	float compoundedAnnually;
//	compoundedAnnually = principalAmount * (annualInterest * 0.01);
//	float totalBalanceCA = principalAmount + compoundedAnnually;
//	float compoundedDaily = principalAmount * pow((1 + (annualInterest * 0.01) / 365), 365) - principalAmount;
//	float totalBalanceCD = principalAmount + compoundedDaily;
//
//	cout << fixed << setprecision(2) << showpoint;
//	cout << left << "For a loan of " << setw(20) << right << "$" << setw(10) << right << principalAmount << right << endl;
//	cout << left << "With a rate of " << setw(29) << right << annualInterest << setw(2) << right << "%"  << endl;
//	cout << left << "Interest compounded annually" << setw(6) << right << "$" << setw(10) << right << compoundedAnnually << right << endl;
//	cout << left << "YE balance" << setw(24) << right << "$" << setw(10) << right << totalBalanceCA << right << endl;
//	cout << left << "Interest compounded daily" << setw(9) << right << "$" << setw(10) << right << compoundedDaily << right << endl;
//	cout << left << "YE balance" << setw(24) << right << "$" << setw(10) << right << totalBalanceCD << right << endl << endl;


/*

		Part 2. Screen size calculation.
	Ask the user to enter the size of a display screen as a height measurement, and a width measurement, both in
	inches. Calculate and display the screen size as it would be marketed: it’s the length of the diagonal. Use the
	Pythagorean formula of a2 + b2 = c2 for your computation. Make your own choice regarding how precise you
	want the diagonal to be displayed.

*/

//	float height;
//	cout << "Enter the height of a display screen in inches" << endl;
//	cin >> height;
//	float width;
//	cout << "Enter the width of a display screen in inches" << endl;
//	cin >> width;
//
//	float screenSize;
//	screenSize = pow(height,2) + pow(width,2);
//	screenSize = sqrt(screenSize);
//
//
//	cout << "LG " << setprecision(0) <<  noshowpoint << screenSize << '"' << endl << endl;

/*

		Part 3. Travel mileage calculations.
	Ask the user to enter the cost of a tank of gas. Then, ask the user to enter the number of miles driven on that
	tank of gas. Display the input, and calculate the display the cost per mile, with dollar signs for dollars-and-
	cents figures.

*/

	float gasTank;
	cout << left << "Enter the cost of a tank of gas: " << setw(20) << right << endl;
	cin >> gasTank;

	float drivenMiles;
	cout << left << "Enter the number of miles driven on that tank of gas: " << endl;
	cin >> drivenMiles;

	float costPerMile;
	costPerMile = gasTank / drivenMiles;

	cout << fixed << setprecision(2) << showpoint;
	cout << left << "Cost of gas:" << setw(10) << right << "$" << setw(10) << left << gasTank << endl;
	cout << left << "Miles driven:" << setw(19) << right << drivenMiles << right << endl;
	cout << left << "Cost per mile:" << setw(8) << right << "$" << setw(10) << right << costPerMile << right << endl << endl;


/*

		Part 4: Las Vegas dice game
	Roll two simulated dice using the rand function as discussed in class. A die value is in the range 1 through 6.
	Display the values of each die and their total. Examine the total. If it is a loser (total of 2, 3, or 12) tell the user
	they lost. If it is a winner (total 7 or 11), tell the user they won. Otherwise, the roll total is the “point” to be
	made. Tell the user that there is a “point,” and display the point. Roll the dice once more, and examine the
	total. If the total equals the point, tell the user they won. Otherwise, tell the user they lost.
	Play only one game. Roll the dice, go through the calculations, and print the results.

*/

	srand(time(0));
	int i;
	i = rand();
	int die1 = (i % 6) +1;
	i = rand();
	int die2 = (i % 6) +1;
	int dieTotal = die1 + die2;
	cout << "Player rolls " << die1 << " and " << die2 << ". Total: " << dieTotal << endl;


	if (dieTotal == 2 or dieTotal == 3 or dieTotal == 12)
	{
		cout << "Loser" << endl;
	}
	else if (dieTotal == 7 or dieTotal == 11)
	{
		cout << "Winner" << endl;
	}
	else
	{
		cout << "There is a point: " << dieTotal << endl;
		i = rand();
		die1 = (i % 6) +1; // convert to an int in range 1-6
		i = rand();
		die2 = (i % 6) +1;
		int dieTotal2 = die1 + die2;
		cout << "Player then rolls " << die1 << " and " << die2 << ". Total: " << dieTotal2 << endl;

		if (dieTotal == dieTotal2)
		{
			cout << "Winner" << endl;
		}
		else
		{
			cout << "Loser" << endl;
		}
	}


	return 0;
}
